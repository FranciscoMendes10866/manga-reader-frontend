import {
  Container,
  SimpleGrid,
  Select,
  Flex,
  Input,
  useBreakpointValue,
  IconButton,
} from '@chakra-ui/react';
import { RiArrowDropDownLine } from 'react-icons/ri';
import { CgOptions } from 'react-icons/cg';
import type { NextPage } from 'next';
import Head from 'next/head';

import { useGetMangaListQuery, Manga } from '../generated/graphql';
import VerticalCard from '../components/VerticalCard';
import { MangaAiringStatus, MangaFormatOptions } from '../assets/data';

const Browse: NextPage = () => {
  const [result] = useGetMangaListQuery();

  const visibility = useBreakpointValue({ base: 'none', md: 'flex' });
  const width = useBreakpointValue({ base: 'full', md: '180px', lg: '250px' });
  const filterButtonVisibility = useBreakpointValue({
    base: 'flex',
    md: 'none',
  });
  const selectComponentWidth = useBreakpointValue({
    md: '180px',
    lg: '250px',
  });

  return (
    <div>
      <Head>
        <title>Dango Manga - Browse</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Container paddingTop={12} maxW="container.xl">
          <Flex
            alignItems="center"
            justifyContent="space-between"
            paddingBottom={14}
          >
            <Input
              variant="filled"
              placeholder="Search"
              color="brand.800"
              backgroundColor="brand.900"
              width={width}
            />
            <IconButton
              aria-label="Search database"
              icon={<CgOptions />}
              marginLeft={6}
              variant="ghost"
              background="brand.900"
              color="brand.800"
              display={filterButtonVisibility}
            />
            <Select
              placeholder="Category"
              color="brand.800"
              backgroundColor="brand.900"
              variant="filled"
              width={selectComponentWidth}
              icon={<RiArrowDropDownLine />}
              display={visibility}
            >
              <option value="option1">Option 1</option>
              <option value="option2">Option 2</option>
              <option value="option3">Option 3</option>
            </Select>
            <Select
              placeholder="Format"
              color="brand.800"
              backgroundColor="brand.900"
              variant="filled"
              width={selectComponentWidth}
              icon={<RiArrowDropDownLine />}
              display={visibility}
            >
              {MangaFormatOptions.map((format, index) => (
                <option
                  key={`manga-format-option-${index}`}
                  value={format.name}
                >
                  {format.name}
                </option>
              ))}
            </Select>
            <Select
              placeholder="Status"
              color="brand.800"
              backgroundColor="brand.900"
              variant="filled"
              width={selectComponentWidth}
              icon={<RiArrowDropDownLine />}
              display={visibility}
            >
              {MangaAiringStatus.map((status, index) => (
                <option
                  key={`manga-status-option-${index}`}
                  value={status.value}
                >
                  {status.name}
                </option>
              ))}
            </Select>
          </Flex>
          <SimpleGrid columns={{ sm: 2, md: 4, lg: 6 }} spacing={10}>
            {result.data?.getMangaList &&
              result.data?.getMangaList.map((manga) => (
                <VerticalCard key={manga?.id} manga={manga as Manga} />
              ))}
          </SimpleGrid>
        </Container>
      </main>
    </div>
  );
};

export default Browse;
